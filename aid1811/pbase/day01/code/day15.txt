
生成器 
    生成器是能够动态提供数据的可迭代对象
    生成器在程序运行时生成数据，与容器类不同，他通常不会再内存中保存
    大量的数据，而是现用现生成

生成器有两种：
    生成器函数
    生成器表达式
生成器函数：
    含有yiled 语句的函数是生成器函数，此函数被调用将返回一个生成器对象
    yiled 翻译为产生（或生产）

生成器函数说明：
    生成器函数调用将返回一个生成器对象，生成器对象是一个可迭代对象
    生成器对象通常是一次性的，通常不可重复使用
    在生成器函数调用return 会触发一个StopItreation异常

生成器的示例2：

yiled 语句
    语法：
    yiled 表达式
    说明：
        yiled 用于def 函数中，目的是将此函数作为生成器函数使用
        yiled 用来生产数据，共供迭代器的next(it)函数使用
    示例1：

生成器表达式：
     语法：
        （表达式 for 变量 in 可迭代对象 [if 真值表达式]）
    说明：
        if 子句部分可以省略
    作用：
        用推导式形式创建新的生成器
    示例3：


生成器说明： 
    生成器既是可迭代对象 ，同时它自身也是迭代器

     
迭代工具函数 ：
    迭代工具函数的作用是返回一个可迭代对象

函数                     说明
zip(iter1, iter2, iter3,...) 返回一个zip生成器对象
    此对象生成一个元组，次元组中的数据分别来自于iter1, iter2...
    可迭代对象提供的数据个数有最小的可迭代对象参数决定

enumerate(iterable, start = 0) 创建一个enumerate 生成器对象
    此对象生成类型为（索引，值）对的元组，默认索引从零开始
    也可以用start指定

字节串 bytes 和 字节数组 bytearray
字节串（也叫字节序列） bytes
    作用：
        存储以字节为单位的数据
        字节串是不可变的字节序列
字节（byte）
    字节是由8个位（bit) 组成的单元
    字节是0～255之间的整数，用来表示一个字节的取值

创建空字符串的字面值：
    b''
    b""
    b''''''
    b""""""

创建非空字符串的字面值：
    B = b'ABCD'
    B = b"ABCD"

字节串的构造函数 bytes 
bytes() 生成一个空的字符串 等同于b''
bytes(整数可迭代对象)
--*-*-*-


