
集合set 
    集合是可变容器
    集合内的数据对象都是唯一的（不能重复多次）
    集合是无序的储存结构，集合中的数据没有先后顺序关系‘
    集合内的元素是不可变对象
    集合是可迭代对象
    集合是相当于只有键没有值的字典（键则是集合的数据）

    创建空集合：
    set ()
    创建非空集合
    s = {1, 2, 3}
    集合的构造函数 set
    set() 创建一个非空集合（注：不能用{}来创建空集合）
    set(iterable) 用可迭代对象创建一个新的集合对象
     示例：


集合的运算：
    交集运算&，并集|    补集-  对称补集^  子集< 超集 >
  
  & 生成两个集合的交集
   |生成两个集合的并集
   -生成两个集合的补集
   ^ 生成两个集合的对称补集
   > 判断一个集合是另一个集合的超集
   <判断一个集合示例另一个集合的子集


集合相同或不同 ==  ！=
其他：
    &= x &= y  相当于 x = x & y 以下同理
    |=
    ^=
    -=
    <=
    >=
 
 in  /  not in
    同列表的in  not in 作用相同

集合相关的函数
    len(x)  max(x)  min(x) sum(x) any(x) all(x)

集合的方法：

集合的推导式：
    集合推导式是用可迭代对象创建集合的表达式

    语法：
    {表达式 for 变量 in 可迭代对象 [if 真值表达式]}
    注：[]内的部分可省略


集合推导式的嵌套
    嵌套规则与列表推导式完全相同



固定集合 frozenset
    固定集合是不可变的，无序的含有唯一元素的集合
    固定集合就是不可变的集合
    作用：
    固定集合可以作为字典的键，还可以作为集合的键
固定集合的构造函数 frozenset
frozenset()    创建一个空的固定集合
frozenset(iterable)  用可迭代对象创建一个固定集合

固定集合的运算：
    & 交集 |并集 - 补集 ^ 对称补集
    &=   |=  -=  ^= 
    in  not in
    > >=  <  <=  ==   !=
    

函数 function
什么是函数：
    函数是可以重复执行的语句块，可以重复调用
    函数是面向过程编程的最小单位

    作用：
    1.用于封装语句块，提高代码的重用性
    2.定义用户级别的函数

def 语句
作用：
    创建一个函数，用变量绑定这个函数
    语法：
    def 函数名（形参列表）：
        语句块（代码块）
    说明：
    1. 函数的名字就是语句块的名称
    2.函数名的命名规则写变量名相同（必须为标识符）
    3.函数名是一个变量
    4.形参列表是用户自定义的变量名，用来接收调用者传入的参数
    5.函数上有自己的名字空间，在函数外部不可以访问函数内部的变量
    在函数内部可以访问函数外部的变量，但不能用赋值语句修改
    这些变量的绑定关系
    6.函数如果不存入参数，参数列表可以为空
    7.语句部分不能为空，如果为空需要补充pass语句
示例：

函数调用
    函数名([实际调用传递参数])
    注：[]内部的内容可省略
说明：
    函数调用是一个表达式
    如果函数内部没有return语句，则函数执行完毕后返回None

return 语句
    语法：
    return[表达式]
    注：[]代表内部内容可省略
    作用：
    用于函数中，结束当前函数的执行，返回到调用该函数的地方，同时
    返回一个对象的引用关系
    说明：
        return 语句后跟的表达式可以省略，省略后相当于return None 
        如果函数内部没有return 语句，则函数执行



