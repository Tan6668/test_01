

globals 和 locals 函数
  globals （） 返回当前全局作用域内变量的字典
  locals （） 返回当前局部作用域内变量的字典

  函数变量
    函数名是变量，它在创建函数绑定一个函数
    示例1

一个函数可以作为另一个函数的实参传递
示例2

函数可以作为另一个函数的返回值
一个函数内部可以用return语句返回另一个函数的引用关系
示例3：
函数的嵌套定义：
函数嵌套定义是指一个函数里用def 语句来创建其它函数的情况
示例4：

python的作用域
    作用域也叫名字空间，是访问变量是查找变量名的范围空间

python的四个作用域 LEGB
作用域                      英文解释                    英文简写
局部作用域（函数内）         Local(function)               L
外部嵌套函数作用域           Enclosing function local     E
函数定义所在的模块的作用域    Global(module)               G 
Python 内置模块的作用域       Builtin(Python)               B 

变量名的查找规则：
在访问变量时，先查找本地变量，然后是包裹次函数的外部的内部变量
之后是全局变量，最后是内置变量即
L   E   G    B   


global 语句
作用：
    告诉解释器，global 语句声明的一个或多个变量，这些变量的作用域
    为模块级的作用域，也成为全局作用域
    全局声明global 将赋值变量映射到模块文件内部的作用域
 语法：
    global 变量名1，变量名2，...

说明：
    1.全局变量如果要在函数内部被赋值，则必须经过全局声明（否则会被认为是局部变量)
    2.全局变量在函数内部不经过声明就可以直接访问
    3.不能先声明局部变量，在用global声明为全局变量，此做法不符合规则
    4. global 变量列表里的变量名不能出现在函数的形参列表里

nonlocal 语句
作用：
    告诉解释执行器，nonlocal 声明的变量不是局部变量，也不是全局变量，而是外部嵌套
    函数内的变量
    语法：
        nonlocal 变量名1，变量名2，..
    说明：
    1.nonlocal 语句只能在被嵌套的函数内部进行使用
    2.对nonlocal 变量进行赋值将对外部嵌套函数作用域的变量进行操作
    3.当有两层或两层以上函数嵌套时 访问nonlocal 变量只对最近一层的变量进行操作
    4.nonlocal 语句的变量列表里的变量名，不能出现在此函数的形参列表中

lambda 表达式（又称匿名函数）
    作用：
    创建一个匿名函数对象
    语法格式：
    lambda [函数的形参列表]：表达式
    注：[]里的内容可以为空
    返回值：
    函数对象的引用关系
    示例： 
    myadd = lambda x, y: x + y
    说明：
    lambda 表达式创建的函数只能包含一条表达式
    lambda 比函数简单且可以随时创建和销毁，有利于减少程序的
            偶合度（偶合度为程序模块之间的关联程度）


eval 和 exec 函数
eval 函数： 
    作用： 
    把一个字符串当成一个表达式来执行，返回表达式执行后的结果
    格式：
    eval(source, global=None, local=None)
    参数：
    source 用于执行的表达式字符串
    global 用于描述source 执行的全局变量环境的字典、
    local  用于描述source执行的 局部变量环境的字典

exec 函数： 
        作用： 
    把一个字符串当成程序来执行
    格式：
    
    exec(source, global=None, local=None)
    参数：
    source 用于执行语句的字符串
    global 用于描述source 执行的全局变量环境的字典、
    local  用于描述source执行的 局部变量环境的字典
