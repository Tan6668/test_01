

装饰器 decorators(专业提高篇)
    装饰器是一个函数，主要作用是用来包装另一个函数或类（后面才讲）

作用：
    在不修改被装饰函数的源代码，不改变被装饰函数的调用方式的情况下添加或改变原函数的功能
语法:
    def 装饰器函数名(fn):
        语句块
        return 函数对象

    @装饰器函数名<换行>
    def 被装饰函数名(形参列表)：
        语句块

示例1：

带参数的装饰器的应用示例：
    示例2

函数的文档字符串
    函数内第一次未赋值给任何变量的字符串是函数的文档字符串

    语法：
        def 函数名(参数列表)：
            '函数的文档字符串'
            语句块
    示例： 
        def myfunc(x, y, z):
        ''' 这个是测试文档字符串的函数：'''

    说明：
        文档字符串通常用来说明本函数的功能和使用方法
        在交互模式下可以用：>>>help(函数名)查看函数的文档字符串函数
        的文档字符串绑定在函数的__doc__属性上

   函数的__doc__属性上
    用于绑定函数的文档字符串 

函数定义的完整语法总结：
    def 语句语法：
        [@装饰器1]
        [@装饰器2]
        [...]    
        def 函数名([位置形参])



模块 Module
    什么是模块
    模块是一个包含有一系列的数据，函数，类等组成的程序组
    模块是一个文件，模块文件名通常以。py结果
作用：
    1.3
    2.模块中的数据，函数和类可提供给其它模块或程序使用
模块的分类：
    1.内置模块，在解析器的内部可以和直接使用
    2，标准库模块，安装python时以安装且可以直接使用
    3，第三方模块，需要自己安装
    通常用pip3 命令来安装
    4,用户自己编写的模块，（可以作为其他人的第三方模块）

模块的导入   import
import  语句
    语法：
    import 模块名1 [as 模块新名1][,模块名2[as 模块新名2]]
    作用：
    将某模块整体导入到当前模块作用域内

查看模块属性的函数：
    dir(obj)函数，返回模块内所有属性的列表
    help(obj)函数， k\可以查看模块相关的文档字符串


from import 语句
    语句：  
    from 模块名 import 属性名1[as 新属性名1][, 属性名2[as 新属性名2]]
    作用：
        将某模块内的一个或多个属性导入到当前模块的作用域

 from import * 语句
    语法： 
    from 模块名 import *
    作用：
        将某模块的所有属性导入到当前模块
    示例：  

dir 函数
    语法：  
        dir ([对象]) 返回一个字符串列表
    说明：
        如果没有参数调用，则返回当前作用域内所有变量的列表
        如果给定一个对象作为参数，则返回

    数学模块
        模块名 math 

    时间模块
        模块名 time
        