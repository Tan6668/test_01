

字符串的格式化表达式
     作用：
     生成一定格式的字符串
     运算符 %
     语法格式:
      格式化字符串 % 参数值
      格式化字符串 % （参数值1，参数值2，....）
        fmt = "name: %s, age: %d"
        s = 'tarena'
        a = 15
        


格式化字符串中的占位符和类型码
    占位符和类型码      意义
    %s                字符串，使用str(x)函数转换
    %r                 字符串， 使用repr(x)函数转换
    %c                 整数转为单个字符
    %d                 十进制整数
    %o                 八进制整数
    %x                 十六进制整数（字符a-f小写）
    %X                 十六进制整数（字符A-F大写）
    %e                  指数型浮点数（e小写） 如：2.9e+10
    %E                  指数型浮点数（e大写） 如：2.9E+10


占位符和类型码之间的格式化语法：
% [- + 0 宽度.精度]  类型码
说明：
    - 左对齐（默认为右对齐）
    + 显示正号
    0 左侧空白位置补零
    宽度 整数，整个数据输出的宽度（占用的字符数）
    精度 整数，保留小数占后多少位（默认为6位）
    示例：
        "%d"  %123             #'123'
        "%10d"   %123          #'       123'
        "%-10d"  %123          #'123       '
        "%010d"  %123          #'0000000123'



循环语句 
    循环语句
    while 语句
    for  语句


    while 语句：
        作用：
            根据一定条件，重复执行一条语句或多条语句
        语法：
            while 真值表达式：
            语句块1（此部分语句可能会重复执行）
            else:
            语句块2
        说明：
        1.先执行真值表达式，测试布尔值为True 或False
        2. 如果真值表达式测试值为True, 则执行语句块1，然后返回到第一步
            重复进行测试
        3.如果真值表达式测试值为False，则执行语句块2，然后结果此while
            语句的执行，如果没有else 字句则结束whlie 语句
        

    while 语句注意事项
    1.要控制循环的真直表达式来防止死循环
    2.通常用真值表达式内的循环变量来控制循环条件
    3.通常在循环语句块内要改变循环变量来控制循环条件和变量的走向

    while 语句嵌套
        while  语句本身是语句，和其他语句一样可以嵌入到任何的复合语句中

    示例：
        while  真值表达式：
            ...
            while 真值表达式2
             ...
            else:
             ...
            ...
        else:
            ...


break 语句
    问题:
        如果在循环过程中，不想在继续执行此循环了，怎么办？
    作用：
        用于循环语句（while或for语句中），用来终止当前循环语句的执行
    语法：
    break
    说明：
        当break 语句执行后，次循环语句break之后的语句将不再执行
        braek 语句通常和if语句组合使用
        break 语句终止循环时，循环语句的else子句的语句将不会执行
        break 语句只能终止当前循环语句的执行，如果有循环嵌套时，
        不会跳出嵌套的外重循环
        break 语句只能在循环语句(while或for语句)内部使用

死循环death loop
    死循环是指循环条件一直成立的循环
    死循环通常用break语句来终止循环
    死循环的else子句永远不会执行
    示例：
        i = 1 
        while  True:
             print(i)
            if i == 10:
                break
            i  += 1